version: "3.9"

services:
  webserver:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - client
    command: [ "nginx-debug", "-g", "daemon off;" ]

  certbot:
    image: certbot/certbot:latest
    depends_on:
      - webserver
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    command: certonly -v --webroot --webroot-path=/var/www/certbot --email admin@linkmusic.ru --agree-tos --no-eff-email --force-renewal -d linkmusic.ru

  backend:
    build:
      context: ../..
      dockerfile: docker/production/Dockerfile
    env_file:
      - ../../.env
    volumes:
      - /app/backend/node_modules
      - /app/frontend/node_modules
      - /app/node_modules
      - ../../public/:/app/public/
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    command: [ "yarn", "start:backend" ]

  client:
    build:
      context: ../..
      dockerfile: docker/production/Dockerfile
    env_file:
      - ../../.env
    depends_on:
      - backend
    command: [ "yarn", "start:frontend" ]

  db:
    image: postgres:14.4-alpine
    restart: always
    env_file:
      - ../../.env
    volumes:
      - ../../pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      PGUSER: ${DATABASE_USERNAME}
      PGPASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
