version: '3.9'

services:
  backend:
    build:
      context: ../..
      dockerfile: docker/development/Dockerfile
    env_file:
      - ../../.env.local
    volumes:
      - ../..:/app
      - /app/backend/node_modules
      - /app/frontend/node_modules
      - /app/node_modules
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "1337:1337"
      - "1338:1338"

    command: [ "yarn", "develop" ]

  db:
    image: postgres:14.4-alpine
    restart: always
    env_file:
      - ../../.env.local
    volumes:
      - ../../pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      PGUSER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5430:5432"
